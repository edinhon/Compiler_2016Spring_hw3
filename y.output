   0  $accept : program $end

   1  program : statement
   2          | statement program

   3  program_in_func : statement_in_func
   4                  | statement_in_func program_in_func

   5  program_in_case : statement_in_case
   6                  | statement_in_case program_in_case

   7  statement : declare
   8            | func_invocation ';'
   9            | simple_statement

  10  statement_in_func : declare_in_func
  11                    | simple_statement
  12                    | compound_statement
  13                    | if_else_statement
  14                    | switch_statement
  15                    | while_statement
  16                    | for_statement
  17                    | KEY_BREAK ';'
  18                    | KEY_CONTINUE ';'
  19                    | return_statement
  20                    | expr ';'

  21  statement_in_case : simple_statement
  22                    | compound_statement
  23                    | if_else_statement
  24                    | switch_statement
  25                    | while_statement
  26                    | for_statement
  27                    | KEY_BREAK ';'
  28                    | KEY_CONTINUE ';'
  29                    | return_statement
  30                    | expr ';'

  31  declare : type declare_ID ';'
  32          | KEY_CONST type declare_const ';'
  33          | type declare_function
  34          | type_void declare_function

  35  declare_in_func : type declare_ID ';'
  36                  | KEY_CONST type declare_const ';'

  37  declare_ID : scalar
  38             | array
  39             | scalar ',' declare_ID
  40             | array ',' declare_ID

  41  declare_const : ID '=' expr
  42                | ID '=' expr ',' declare_const

  43  declare_function : ID '(' ')' ';'
  44                   | ID '(' paras ')' ';'
  45                   | ID '(' ')' '{' '}'
  46                   | ID '(' paras ')' '{' '}'
  47                   | ID '(' ')' '{' program_in_func '}'
  48                   | ID '(' paras ')' '{' program_in_func '}'

  49  type : TYPE_INT
  50       | TYPE_DOUBLE
  51       | TYPE_CHAR
  52       | TYPE_BOOL

  53  type_void : TYPE_VOID

  54  scalar : scalar_id
  55         | scalar_id '=' expr

  56  scalar_id : ID

  57  array : ID arr_state_index
  58        | ID arr_state_index '=' '{' arr_content '}'
  59        | ID arr_state_index '=' '{' '}'

  60  arr_state_index : '[' INT ']'
  61                  | '[' INT ']' arr_state_index

  62  arr_content : exprs

  63  paras : para
  64        | para ',' paras

  65  para : type ID
  66       | type ID arr_state_index

  67  var : ID
  68      | ID arr_expr_index

  69  simple_statement : var '=' expr ';'

  70  compound_statement : '{' program_in_func '}'
  71                     | '{' '}'

  72  if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' KEY_ELSE '{' program_in_func '}'
  73                    | KEY_IF '(' expr ')' '{' '}' KEY_ELSE '{' program_in_func '}'
  74                    | KEY_IF '(' expr ')' '{' program_in_func '}' KEY_ELSE '{' '}'
  75                    | KEY_IF '(' expr ')' '{' '}' KEY_ELSE '{' '}'
  76                    | KEY_IF '(' expr ')' '{' program_in_func '}'
  77                    | KEY_IF '(' expr ')' '{' '}'

  78  switch_statement : KEY_SWTICH '(' ID ')' '{' case_statements '}'
  79                   | KEY_SWTICH '(' ID ')' '{' case_statements default_statement '}'
  80                   | KEY_SWTICH '(' ID ')' '{' program_in_func case_statements '}'
  81                   | KEY_SWTICH '(' ID ')' '{' program_in_func case_statements default_statement '}'

  82  case_const : INT
  83             | CHAR

  84  case_statements : KEY_CASE case_const ':' program_in_case
  85                  | KEY_CASE case_const ':' program_in_case case_statements
  86                  | KEY_CASE case_const ':'
  87                  | KEY_CASE case_const ':' case_statements

  88  default_statement : KEY_DEFAULT ':' program_in_case
  89                    | KEY_DEFAULT ':'

  90  while_statement : KEY_WHILE '(' expr ')' '{' program_in_func '}'
  91                  | KEY_WHILE '(' expr ')' '{' '}'
  92                  | KEY_DO '{' program_in_func '}' KEY_WHILE '(' expr ')' ';'
  93                  | KEY_DO '{' '}' KEY_WHILE '(' expr ')' ';'

  94  for_statement : KEY_FOR '(' for_paras ';' expr ';' for_paras ')' '{' program_in_func '}'
  95                | KEY_FOR '(' for_paras ';' expr ';' for_paras ')' '{' '}'
  96                | KEY_FOR '(' for_paras ';' ';' for_paras ')' '{' program_in_func '}'
  97                | KEY_FOR '(' for_paras ';' ';' for_paras ')' '{' '}'
  98                | KEY_FOR '(' for_paras ';' expr ';' ')' '{' program_in_func '}'
  99                | KEY_FOR '(' for_paras ';' expr ';' ')' '{' '}'
 100                | KEY_FOR '(' for_paras ';' ';' ')' '{' program_in_func '}'
 101                | KEY_FOR '(' for_paras ';' ';' ')' '{' '}'
 102                | KEY_FOR '(' ';' expr ';' for_paras ')' '{' program_in_func '}'
 103                | KEY_FOR '(' ';' expr ';' for_paras ')' '{' '}'
 104                | KEY_FOR '(' ';' ';' for_paras ')' '{' program_in_func '}'
 105                | KEY_FOR '(' ';' ';' for_paras ')' '{' '}'
 106                | KEY_FOR '(' ';' expr ';' ')' '{' program_in_func '}'
 107                | KEY_FOR '(' ';' expr ';' ')' '{' '}'
 108                | KEY_FOR '(' ';' ';' ')' '{' program_in_func '}'
 109                | KEY_FOR '(' ';' ';' ')' '{' '}'

 110  for_paras : expr
 111            | var '=' expr
 112            | expr ',' for_paras
 113            | var '=' expr ',' for_paras

 114  return_statement : KEY_RETURN expr ';'

 115  exprs : expr
 116        | expr ',' exprs

 117  expr : var
 118       | ID OPER_PP
 119       | ID OPER_SS
 120       | '-' expr
 121       | expr '*' expr
 122       | expr '/' expr
 123       | expr '%' expr
 124       | expr '+' expr
 125       | expr '-' expr
 126       | expr OPER_CMP expr
 127       | '!' expr
 128       | expr OPER_AA expr
 129       | expr OPER_OO expr
 130       | '(' expr ')'
 131       | val
 132       | ID '(' ')'
 133       | ID '(' exprs ')'

 134  val : SCI
 135      | INT
 136      | DOUBLE
 137      | CHAR
 138      | STR
 139      | KEY_NULL
 140      | KEY_TRUE
 141      | KEY_FALSE

 142  arr_expr_index : '[' expr ']'
 143                 | '[' expr ']' arr_expr_index

 144  func_invocation : ID '(' ')'
 145                  | ID '(' exprs ')'

state 0
	$accept : . program $end  (0)

	KEY_CONST  shift 1
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	TYPE_VOID  shift 6
	ID  shift 7
	.  error

	program  goto 8
	var  goto 9
	statement  goto 10
	declare  goto 11
	func_invocation  goto 12
	simple_statement  goto 13
	type  goto 14
	type_void  goto 15


state 1
	declare : KEY_CONST . type declare_const ';'  (32)

	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	.  error

	type  goto 16


state 2
	type : TYPE_INT .  (49)

	.  reduce 49


state 3
	type : TYPE_DOUBLE .  (50)

	.  reduce 50


state 4
	type : TYPE_CHAR .  (51)

	.  reduce 51


state 5
	type : TYPE_BOOL .  (52)

	.  reduce 52


state 6
	type_void : TYPE_VOID .  (53)

	.  reduce 53


state 7
	var : ID .  (67)
	var : ID . arr_expr_index  (68)
	func_invocation : ID . '(' ')'  (144)
	func_invocation : ID . '(' exprs ')'  (145)

	'['  shift 17
	'('  shift 18
	'='  reduce 67

	arr_expr_index  goto 19


state 8
	$accept : program . $end  (0)

	$end  accept


state 9
	simple_statement : var . '=' expr ';'  (69)

	'='  shift 20
	.  error


state 10
	program : statement .  (1)
	program : statement . program  (2)

	KEY_CONST  shift 1
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	TYPE_VOID  shift 6
	ID  shift 7
	$end  reduce 1

	program  goto 21
	var  goto 9
	statement  goto 10
	declare  goto 11
	func_invocation  goto 12
	simple_statement  goto 13
	type  goto 14
	type_void  goto 15


state 11
	statement : declare .  (7)

	.  reduce 7


state 12
	statement : func_invocation . ';'  (8)

	';'  shift 22
	.  error


state 13
	statement : simple_statement .  (9)

	.  reduce 9


state 14
	declare : type . declare_ID ';'  (31)
	declare : type . declare_function  (33)

	ID  shift 23
	.  error

	scalar_id  goto 24
	declare_ID  goto 25
	declare_function  goto 26
	scalar  goto 27
	array  goto 28


state 15
	declare : type_void . declare_function  (34)

	ID  shift 29
	.  error

	declare_function  goto 30


state 16
	declare : KEY_CONST type . declare_const ';'  (32)

	ID  shift 31
	.  error

	declare_const  goto 32


state 17
	arr_expr_index : '[' . expr ']'  (142)
	arr_expr_index : '[' . expr ']' arr_expr_index  (143)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 46
	val  goto 47


state 18
	func_invocation : ID '(' . ')'  (144)
	func_invocation : ID '(' . exprs ')'  (145)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	')'  shift 48
	.  error

	var  goto 45
	expr  goto 49
	exprs  goto 50
	val  goto 47


state 19
	var : ID arr_expr_index .  (68)

	.  reduce 68


state 20
	simple_statement : var '=' . expr ';'  (69)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 51
	val  goto 47


state 21
	program : statement program .  (2)

	.  reduce 2


state 22
	statement : func_invocation ';' .  (8)

	.  reduce 8


state 23
	declare_function : ID . '(' ')' ';'  (43)
	declare_function : ID . '(' paras ')' ';'  (44)
	declare_function : ID . '(' ')' '{' '}'  (45)
	declare_function : ID . '(' paras ')' '{' '}'  (46)
	declare_function : ID . '(' ')' '{' program_in_func '}'  (47)
	declare_function : ID . '(' paras ')' '{' program_in_func '}'  (48)
	scalar_id : ID .  (56)
	array : ID . arr_state_index  (57)
	array : ID . arr_state_index '=' '{' arr_content '}'  (58)
	array : ID . arr_state_index '=' '{' '}'  (59)

	'['  shift 52
	'('  shift 53
	';'  reduce 56
	','  reduce 56
	'='  reduce 56

	arr_state_index  goto 54


state 24
	scalar : scalar_id .  (54)
	scalar : scalar_id . '=' expr  (55)

	'='  shift 55
	';'  reduce 54
	','  reduce 54


state 25
	declare : type declare_ID . ';'  (31)

	';'  shift 56
	.  error


state 26
	declare : type declare_function .  (33)

	.  reduce 33


state 27
	declare_ID : scalar .  (37)
	declare_ID : scalar . ',' declare_ID  (39)

	','  shift 57
	';'  reduce 37


state 28
	declare_ID : array .  (38)
	declare_ID : array . ',' declare_ID  (40)

	','  shift 58
	';'  reduce 38


state 29
	declare_function : ID . '(' ')' ';'  (43)
	declare_function : ID . '(' paras ')' ';'  (44)
	declare_function : ID . '(' ')' '{' '}'  (45)
	declare_function : ID . '(' paras ')' '{' '}'  (46)
	declare_function : ID . '(' ')' '{' program_in_func '}'  (47)
	declare_function : ID . '(' paras ')' '{' program_in_func '}'  (48)

	'('  shift 53
	.  error


state 30
	declare : type_void declare_function .  (34)

	.  reduce 34


state 31
	declare_const : ID . '=' expr  (41)
	declare_const : ID . '=' expr ',' declare_const  (42)

	'='  shift 59
	.  error


state 32
	declare : KEY_CONST type declare_const . ';'  (32)

	';'  shift 60
	.  error


state 33
	val : KEY_NULL .  (139)

	.  reduce 139


state 34
	val : KEY_TRUE .  (140)

	.  reduce 140


state 35
	val : KEY_FALSE .  (141)

	.  reduce 141


state 36
	val : SCI .  (134)

	.  reduce 134


state 37
	val : DOUBLE .  (136)

	.  reduce 136


state 38
	val : CHAR .  (137)

	.  reduce 137


state 39
	val : STR .  (138)

	.  reduce 138


state 40
	val : INT .  (135)

	.  reduce 135


state 41
	var : ID .  (67)
	var : ID . arr_expr_index  (68)
	expr : ID . OPER_PP  (118)
	expr : ID . OPER_SS  (119)
	expr : ID . '(' ')'  (132)
	expr : ID . '(' exprs ')'  (133)

	OPER_PP  shift 61
	OPER_SS  shift 62
	'['  shift 17
	'('  shift 63
	OPER_AA  reduce 67
	OPER_OO  reduce 67
	OPER_CMP  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	'*'  reduce 67
	'/'  reduce 67
	'%'  reduce 67
	']'  reduce 67
	';'  reduce 67
	','  reduce 67
	'='  reduce 67
	')'  reduce 67
	'}'  reduce 67

	arr_expr_index  goto 19


state 42
	expr : '!' . expr  (127)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 64
	val  goto 47


state 43
	expr : '-' . expr  (120)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 65
	val  goto 47


state 44
	expr : '(' . expr ')'  (130)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 66
	val  goto 47


state 45
	expr : var .  (117)

	.  reduce 117


state 46
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)
	arr_expr_index : '[' expr . ']'  (142)
	arr_expr_index : '[' expr . ']' arr_expr_index  (143)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	']'  shift 75
	.  error


state 47
	expr : val .  (131)

	.  reduce 131


state 48
	func_invocation : ID '(' ')' .  (144)

	.  reduce 144


state 49
	exprs : expr .  (115)
	exprs : expr . ',' exprs  (116)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	','  shift 76
	')'  reduce 115
	'}'  reduce 115


state 50
	func_invocation : ID '(' exprs . ')'  (145)

	')'  shift 77
	.  error


state 51
	simple_statement : var '=' expr . ';'  (69)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	';'  shift 78
	.  error


state 52
	arr_state_index : '[' . INT ']'  (60)
	arr_state_index : '[' . INT ']' arr_state_index  (61)

	INT  shift 79
	.  error


state 53
	declare_function : ID '(' . ')' ';'  (43)
	declare_function : ID '(' . paras ')' ';'  (44)
	declare_function : ID '(' . ')' '{' '}'  (45)
	declare_function : ID '(' . paras ')' '{' '}'  (46)
	declare_function : ID '(' . ')' '{' program_in_func '}'  (47)
	declare_function : ID '(' . paras ')' '{' program_in_func '}'  (48)

	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	')'  shift 80
	.  error

	type  goto 81
	paras  goto 82
	para  goto 83


state 54
	array : ID arr_state_index .  (57)
	array : ID arr_state_index . '=' '{' arr_content '}'  (58)
	array : ID arr_state_index . '=' '{' '}'  (59)

	'='  shift 84
	';'  reduce 57
	','  reduce 57


state 55
	scalar : scalar_id '=' . expr  (55)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 85
	val  goto 47


state 56
	declare : type declare_ID ';' .  (31)

	.  reduce 31


state 57
	declare_ID : scalar ',' . declare_ID  (39)

	ID  shift 86
	.  error

	scalar_id  goto 24
	declare_ID  goto 87
	scalar  goto 27
	array  goto 28


state 58
	declare_ID : array ',' . declare_ID  (40)

	ID  shift 86
	.  error

	scalar_id  goto 24
	declare_ID  goto 88
	scalar  goto 27
	array  goto 28


state 59
	declare_const : ID '=' . expr  (41)
	declare_const : ID '=' . expr ',' declare_const  (42)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 89
	val  goto 47


state 60
	declare : KEY_CONST type declare_const ';' .  (32)

	.  reduce 32


state 61
	expr : ID OPER_PP .  (118)

	.  reduce 118


state 62
	expr : ID OPER_SS .  (119)

	.  reduce 119


state 63
	expr : ID '(' . ')'  (132)
	expr : ID '(' . exprs ')'  (133)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	')'  shift 90
	.  error

	var  goto 45
	expr  goto 49
	exprs  goto 91
	val  goto 47


state 64
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : '!' expr .  (127)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	OPER_AA  reduce 127
	OPER_OO  reduce 127
	']'  reduce 127
	';'  reduce 127
	','  reduce 127
	')'  reduce 127
	'}'  reduce 127


state 65
	expr : '-' expr .  (120)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	.  reduce 120


state 66
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)
	expr : '(' expr . ')'  (130)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	')'  shift 92
	.  error


state 67
	expr : expr OPER_AA . expr  (128)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 93
	val  goto 47


state 68
	expr : expr OPER_OO . expr  (129)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 94
	val  goto 47


state 69
	expr : expr OPER_CMP . expr  (126)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 95
	val  goto 47


state 70
	expr : expr '+' . expr  (124)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 96
	val  goto 47


state 71
	expr : expr '-' . expr  (125)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 97
	val  goto 47


state 72
	expr : expr '*' . expr  (121)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 98
	val  goto 47


state 73
	expr : expr '/' . expr  (122)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 99
	val  goto 47


state 74
	expr : expr '%' . expr  (123)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 100
	val  goto 47


state 75
	arr_expr_index : '[' expr ']' .  (142)
	arr_expr_index : '[' expr ']' . arr_expr_index  (143)

	'['  shift 17
	OPER_AA  reduce 142
	OPER_OO  reduce 142
	OPER_CMP  reduce 142
	'+'  reduce 142
	'-'  reduce 142
	'*'  reduce 142
	'/'  reduce 142
	'%'  reduce 142
	']'  reduce 142
	';'  reduce 142
	','  reduce 142
	'='  reduce 142
	')'  reduce 142
	'}'  reduce 142

	arr_expr_index  goto 101


state 76
	exprs : expr ',' . exprs  (116)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 49
	exprs  goto 102
	val  goto 47


state 77
	func_invocation : ID '(' exprs ')' .  (145)

	.  reduce 145


state 78
	simple_statement : var '=' expr ';' .  (69)

	.  reduce 69


state 79
	arr_state_index : '[' INT . ']'  (60)
	arr_state_index : '[' INT . ']' arr_state_index  (61)

	']'  shift 103
	.  error


state 80
	declare_function : ID '(' ')' . ';'  (43)
	declare_function : ID '(' ')' . '{' '}'  (45)
	declare_function : ID '(' ')' . '{' program_in_func '}'  (47)

	';'  shift 104
	'{'  shift 105
	.  error


state 81
	para : type . ID  (65)
	para : type . ID arr_state_index  (66)

	ID  shift 106
	.  error


state 82
	declare_function : ID '(' paras . ')' ';'  (44)
	declare_function : ID '(' paras . ')' '{' '}'  (46)
	declare_function : ID '(' paras . ')' '{' program_in_func '}'  (48)

	')'  shift 107
	.  error


state 83
	paras : para .  (63)
	paras : para . ',' paras  (64)

	','  shift 108
	')'  reduce 63


state 84
	array : ID arr_state_index '=' . '{' arr_content '}'  (58)
	array : ID arr_state_index '=' . '{' '}'  (59)

	'{'  shift 109
	.  error


state 85
	scalar : scalar_id '=' expr .  (55)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	';'  reduce 55
	','  reduce 55


state 86
	scalar_id : ID .  (56)
	array : ID . arr_state_index  (57)
	array : ID . arr_state_index '=' '{' arr_content '}'  (58)
	array : ID . arr_state_index '=' '{' '}'  (59)

	'['  shift 52
	';'  reduce 56
	','  reduce 56
	'='  reduce 56

	arr_state_index  goto 54


state 87
	declare_ID : scalar ',' declare_ID .  (39)

	.  reduce 39


state 88
	declare_ID : array ',' declare_ID .  (40)

	.  reduce 40


state 89
	declare_const : ID '=' expr .  (41)
	declare_const : ID '=' expr . ',' declare_const  (42)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	','  shift 110
	';'  reduce 41


state 90
	expr : ID '(' ')' .  (132)

	.  reduce 132


state 91
	expr : ID '(' exprs . ')'  (133)

	')'  shift 111
	.  error


state 92
	expr : '(' expr ')' .  (130)

	.  reduce 130


state 93
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr OPER_AA expr .  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	OPER_AA  reduce 128
	OPER_OO  reduce 128
	']'  reduce 128
	';'  reduce 128
	','  reduce 128
	')'  reduce 128
	'}'  reduce 128


state 94
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)
	expr : expr OPER_OO expr .  (129)

	OPER_AA  shift 67
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	OPER_OO  reduce 129
	']'  reduce 129
	';'  reduce 129
	','  reduce 129
	')'  reduce 129
	'}'  reduce 129


state 95
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr OPER_CMP expr .  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	OPER_AA  reduce 126
	OPER_OO  reduce 126
	OPER_CMP  reduce 126
	']'  reduce 126
	';'  reduce 126
	','  reduce 126
	')'  reduce 126
	'}'  reduce 126


state 96
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr '+' expr .  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	OPER_AA  reduce 124
	OPER_OO  reduce 124
	OPER_CMP  reduce 124
	'+'  reduce 124
	'-'  reduce 124
	']'  reduce 124
	';'  reduce 124
	','  reduce 124
	')'  reduce 124
	'}'  reduce 124


state 97
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr '-' expr .  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	OPER_AA  reduce 125
	OPER_OO  reduce 125
	OPER_CMP  reduce 125
	'+'  reduce 125
	'-'  reduce 125
	']'  reduce 125
	';'  reduce 125
	','  reduce 125
	')'  reduce 125
	'}'  reduce 125


state 98
	expr : expr . '*' expr  (121)
	expr : expr '*' expr .  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	.  reduce 121


state 99
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr '/' expr .  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	.  reduce 122


state 100
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr '%' expr .  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	.  reduce 123


state 101
	arr_expr_index : '[' expr ']' arr_expr_index .  (143)

	.  reduce 143


state 102
	exprs : expr ',' exprs .  (116)

	.  reduce 116


state 103
	arr_state_index : '[' INT ']' .  (60)
	arr_state_index : '[' INT ']' . arr_state_index  (61)

	'['  shift 52
	';'  reduce 60
	','  reduce 60
	'='  reduce 60
	')'  reduce 60

	arr_state_index  goto 112


state 104
	declare_function : ID '(' ')' ';' .  (43)

	.  reduce 43


state 105
	declare_function : ID '(' ')' '{' . '}'  (45)
	declare_function : ID '(' ')' '{' . program_in_func '}'  (47)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 123
	.  error

	var  goto 124
	program_in_func  goto 125
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 106
	para : type ID .  (65)
	para : type ID . arr_state_index  (66)

	'['  shift 52
	','  reduce 65
	')'  reduce 65

	arr_state_index  goto 137


state 107
	declare_function : ID '(' paras ')' . ';'  (44)
	declare_function : ID '(' paras ')' . '{' '}'  (46)
	declare_function : ID '(' paras ')' . '{' program_in_func '}'  (48)

	';'  shift 138
	'{'  shift 139
	.  error


state 108
	paras : para ',' . paras  (64)

	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	.  error

	type  goto 81
	paras  goto 140
	para  goto 83


state 109
	array : ID arr_state_index '=' '{' . arr_content '}'  (58)
	array : ID arr_state_index '=' '{' . '}'  (59)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'}'  shift 141
	.  error

	var  goto 45
	expr  goto 49
	arr_content  goto 142
	exprs  goto 143
	val  goto 47


state 110
	declare_const : ID '=' expr ',' . declare_const  (42)

	ID  shift 31
	.  error

	declare_const  goto 144


state 111
	expr : ID '(' exprs ')' .  (133)

	.  reduce 133


state 112
	arr_state_index : '[' INT ']' arr_state_index .  (61)

	.  reduce 61


state 113
	for_statement : KEY_FOR . '(' for_paras ';' expr ';' for_paras ')' '{' program_in_func '}'  (94)
	for_statement : KEY_FOR . '(' for_paras ';' expr ';' for_paras ')' '{' '}'  (95)
	for_statement : KEY_FOR . '(' for_paras ';' ';' for_paras ')' '{' program_in_func '}'  (96)
	for_statement : KEY_FOR . '(' for_paras ';' ';' for_paras ')' '{' '}'  (97)
	for_statement : KEY_FOR . '(' for_paras ';' expr ';' ')' '{' program_in_func '}'  (98)
	for_statement : KEY_FOR . '(' for_paras ';' expr ';' ')' '{' '}'  (99)
	for_statement : KEY_FOR . '(' for_paras ';' ';' ')' '{' program_in_func '}'  (100)
	for_statement : KEY_FOR . '(' for_paras ';' ';' ')' '{' '}'  (101)
	for_statement : KEY_FOR . '(' ';' expr ';' for_paras ')' '{' program_in_func '}'  (102)
	for_statement : KEY_FOR . '(' ';' expr ';' for_paras ')' '{' '}'  (103)
	for_statement : KEY_FOR . '(' ';' ';' for_paras ')' '{' program_in_func '}'  (104)
	for_statement : KEY_FOR . '(' ';' ';' for_paras ')' '{' '}'  (105)
	for_statement : KEY_FOR . '(' ';' expr ';' ')' '{' program_in_func '}'  (106)
	for_statement : KEY_FOR . '(' ';' expr ';' ')' '{' '}'  (107)
	for_statement : KEY_FOR . '(' ';' ';' ')' '{' program_in_func '}'  (108)
	for_statement : KEY_FOR . '(' ';' ';' ')' '{' '}'  (109)

	'('  shift 145
	.  error


state 114
	while_statement : KEY_WHILE . '(' expr ')' '{' program_in_func '}'  (90)
	while_statement : KEY_WHILE . '(' expr ')' '{' '}'  (91)

	'('  shift 146
	.  error


state 115
	while_statement : KEY_DO . '{' program_in_func '}' KEY_WHILE '(' expr ')' ';'  (92)
	while_statement : KEY_DO . '{' '}' KEY_WHILE '(' expr ')' ';'  (93)

	'{'  shift 147
	.  error


state 116
	if_else_statement : KEY_IF . '(' expr ')' '{' program_in_func '}' KEY_ELSE '{' program_in_func '}'  (72)
	if_else_statement : KEY_IF . '(' expr ')' '{' '}' KEY_ELSE '{' program_in_func '}'  (73)
	if_else_statement : KEY_IF . '(' expr ')' '{' program_in_func '}' KEY_ELSE '{' '}'  (74)
	if_else_statement : KEY_IF . '(' expr ')' '{' '}' KEY_ELSE '{' '}'  (75)
	if_else_statement : KEY_IF . '(' expr ')' '{' program_in_func '}'  (76)
	if_else_statement : KEY_IF . '(' expr ')' '{' '}'  (77)

	'('  shift 148
	.  error


state 117
	switch_statement : KEY_SWTICH . '(' ID ')' '{' case_statements '}'  (78)
	switch_statement : KEY_SWTICH . '(' ID ')' '{' case_statements default_statement '}'  (79)
	switch_statement : KEY_SWTICH . '(' ID ')' '{' program_in_func case_statements '}'  (80)
	switch_statement : KEY_SWTICH . '(' ID ')' '{' program_in_func case_statements default_statement '}'  (81)

	'('  shift 149
	.  error


state 118
	return_statement : KEY_RETURN . expr ';'  (114)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 150
	val  goto 47


state 119
	statement_in_func : KEY_BREAK . ';'  (17)

	';'  shift 151
	.  error


state 120
	statement_in_func : KEY_CONTINUE . ';'  (18)

	';'  shift 152
	.  error


state 121
	declare_in_func : KEY_CONST . type declare_const ';'  (36)

	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	.  error

	type  goto 153


state 122
	compound_statement : '{' . program_in_func '}'  (70)
	compound_statement : '{' . '}'  (71)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 154
	.  error

	var  goto 124
	program_in_func  goto 155
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 123
	declare_function : ID '(' ')' '{' '}' .  (45)

	.  reduce 45


state 124
	simple_statement : var . '=' expr ';'  (69)
	expr : var .  (117)

	'='  shift 20
	OPER_AA  reduce 117
	OPER_OO  reduce 117
	OPER_CMP  reduce 117
	'+'  reduce 117
	'-'  reduce 117
	'*'  reduce 117
	'/'  reduce 117
	'%'  reduce 117
	';'  reduce 117


state 125
	declare_function : ID '(' ')' '{' program_in_func . '}'  (47)

	'}'  shift 156
	.  error


state 126
	program_in_func : statement_in_func .  (3)
	program_in_func : statement_in_func . program_in_func  (4)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	KEY_CASE  reduce 3
	'}'  reduce 3

	var  goto 124
	program_in_func  goto 157
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 127
	statement_in_func : simple_statement .  (11)

	.  reduce 11


state 128
	statement_in_func : declare_in_func .  (10)

	.  reduce 10


state 129
	statement_in_func : compound_statement .  (12)

	.  reduce 12


state 130
	statement_in_func : if_else_statement .  (13)

	.  reduce 13


state 131
	statement_in_func : switch_statement .  (14)

	.  reduce 14


state 132
	statement_in_func : while_statement .  (15)

	.  reduce 15


state 133
	statement_in_func : for_statement .  (16)

	.  reduce 16


state 134
	statement_in_func : return_statement .  (19)

	.  reduce 19


state 135
	statement_in_func : expr . ';'  (20)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	';'  shift 158
	.  error


state 136
	declare_in_func : type . declare_ID ';'  (35)

	ID  shift 86
	.  error

	scalar_id  goto 24
	declare_ID  goto 159
	scalar  goto 27
	array  goto 28


state 137
	para : type ID arr_state_index .  (66)

	.  reduce 66


state 138
	declare_function : ID '(' paras ')' ';' .  (44)

	.  reduce 44


state 139
	declare_function : ID '(' paras ')' '{' . '}'  (46)
	declare_function : ID '(' paras ')' '{' . program_in_func '}'  (48)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 160
	.  error

	var  goto 124
	program_in_func  goto 161
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 140
	paras : para ',' paras .  (64)

	.  reduce 64


state 141
	array : ID arr_state_index '=' '{' '}' .  (59)

	.  reduce 59


state 142
	array : ID arr_state_index '=' '{' arr_content . '}'  (58)

	'}'  shift 162
	.  error


state 143
	arr_content : exprs .  (62)

	.  reduce 62


state 144
	declare_const : ID '=' expr ',' declare_const .  (42)

	.  reduce 42


state 145
	for_statement : KEY_FOR '(' . for_paras ';' expr ';' for_paras ')' '{' program_in_func '}'  (94)
	for_statement : KEY_FOR '(' . for_paras ';' expr ';' for_paras ')' '{' '}'  (95)
	for_statement : KEY_FOR '(' . for_paras ';' ';' for_paras ')' '{' program_in_func '}'  (96)
	for_statement : KEY_FOR '(' . for_paras ';' ';' for_paras ')' '{' '}'  (97)
	for_statement : KEY_FOR '(' . for_paras ';' expr ';' ')' '{' program_in_func '}'  (98)
	for_statement : KEY_FOR '(' . for_paras ';' expr ';' ')' '{' '}'  (99)
	for_statement : KEY_FOR '(' . for_paras ';' ';' ')' '{' program_in_func '}'  (100)
	for_statement : KEY_FOR '(' . for_paras ';' ';' ')' '{' '}'  (101)
	for_statement : KEY_FOR '(' . ';' expr ';' for_paras ')' '{' program_in_func '}'  (102)
	for_statement : KEY_FOR '(' . ';' expr ';' for_paras ')' '{' '}'  (103)
	for_statement : KEY_FOR '(' . ';' ';' for_paras ')' '{' program_in_func '}'  (104)
	for_statement : KEY_FOR '(' . ';' ';' for_paras ')' '{' '}'  (105)
	for_statement : KEY_FOR '(' . ';' expr ';' ')' '{' program_in_func '}'  (106)
	for_statement : KEY_FOR '(' . ';' expr ';' ')' '{' '}'  (107)
	for_statement : KEY_FOR '(' . ';' ';' ')' '{' program_in_func '}'  (108)
	for_statement : KEY_FOR '(' . ';' ';' ')' '{' '}'  (109)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	';'  shift 163
	'('  shift 44
	.  error

	var  goto 164
	expr  goto 165
	for_paras  goto 166
	val  goto 47


state 146
	while_statement : KEY_WHILE '(' . expr ')' '{' program_in_func '}'  (90)
	while_statement : KEY_WHILE '(' . expr ')' '{' '}'  (91)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 167
	val  goto 47


state 147
	while_statement : KEY_DO '{' . program_in_func '}' KEY_WHILE '(' expr ')' ';'  (92)
	while_statement : KEY_DO '{' . '}' KEY_WHILE '(' expr ')' ';'  (93)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 168
	.  error

	var  goto 124
	program_in_func  goto 169
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 148
	if_else_statement : KEY_IF '(' . expr ')' '{' program_in_func '}' KEY_ELSE '{' program_in_func '}'  (72)
	if_else_statement : KEY_IF '(' . expr ')' '{' '}' KEY_ELSE '{' program_in_func '}'  (73)
	if_else_statement : KEY_IF '(' . expr ')' '{' program_in_func '}' KEY_ELSE '{' '}'  (74)
	if_else_statement : KEY_IF '(' . expr ')' '{' '}' KEY_ELSE '{' '}'  (75)
	if_else_statement : KEY_IF '(' . expr ')' '{' program_in_func '}'  (76)
	if_else_statement : KEY_IF '(' . expr ')' '{' '}'  (77)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 170
	val  goto 47


state 149
	switch_statement : KEY_SWTICH '(' . ID ')' '{' case_statements '}'  (78)
	switch_statement : KEY_SWTICH '(' . ID ')' '{' case_statements default_statement '}'  (79)
	switch_statement : KEY_SWTICH '(' . ID ')' '{' program_in_func case_statements '}'  (80)
	switch_statement : KEY_SWTICH '(' . ID ')' '{' program_in_func case_statements default_statement '}'  (81)

	ID  shift 171
	.  error


state 150
	return_statement : KEY_RETURN expr . ';'  (114)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	';'  shift 172
	.  error


state 151
	statement_in_func : KEY_BREAK ';' .  (17)

	.  reduce 17


state 152
	statement_in_func : KEY_CONTINUE ';' .  (18)

	.  reduce 18


state 153
	declare_in_func : KEY_CONST type . declare_const ';'  (36)

	ID  shift 31
	.  error

	declare_const  goto 173


state 154
	compound_statement : '{' '}' .  (71)

	.  reduce 71


state 155
	compound_statement : '{' program_in_func . '}'  (70)

	'}'  shift 174
	.  error


state 156
	declare_function : ID '(' ')' '{' program_in_func '}' .  (47)

	.  reduce 47


state 157
	program_in_func : statement_in_func program_in_func .  (4)

	.  reduce 4


state 158
	statement_in_func : expr ';' .  (20)

	.  reduce 20


state 159
	declare_in_func : type declare_ID . ';'  (35)

	';'  shift 175
	.  error


state 160
	declare_function : ID '(' paras ')' '{' '}' .  (46)

	.  reduce 46


state 161
	declare_function : ID '(' paras ')' '{' program_in_func . '}'  (48)

	'}'  shift 176
	.  error


state 162
	array : ID arr_state_index '=' '{' arr_content '}' .  (58)

	.  reduce 58


state 163
	for_statement : KEY_FOR '(' ';' . expr ';' for_paras ')' '{' program_in_func '}'  (102)
	for_statement : KEY_FOR '(' ';' . expr ';' for_paras ')' '{' '}'  (103)
	for_statement : KEY_FOR '(' ';' . ';' for_paras ')' '{' program_in_func '}'  (104)
	for_statement : KEY_FOR '(' ';' . ';' for_paras ')' '{' '}'  (105)
	for_statement : KEY_FOR '(' ';' . expr ';' ')' '{' program_in_func '}'  (106)
	for_statement : KEY_FOR '(' ';' . expr ';' ')' '{' '}'  (107)
	for_statement : KEY_FOR '(' ';' . ';' ')' '{' program_in_func '}'  (108)
	for_statement : KEY_FOR '(' ';' . ';' ')' '{' '}'  (109)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	';'  shift 177
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 178
	val  goto 47


state 164
	for_paras : var . '=' expr  (111)
	for_paras : var . '=' expr ',' for_paras  (113)
	expr : var .  (117)

	'='  shift 179
	OPER_AA  reduce 117
	OPER_OO  reduce 117
	OPER_CMP  reduce 117
	'+'  reduce 117
	'-'  reduce 117
	'*'  reduce 117
	'/'  reduce 117
	'%'  reduce 117
	';'  reduce 117
	','  reduce 117
	')'  reduce 117


state 165
	for_paras : expr .  (110)
	for_paras : expr . ',' for_paras  (112)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	','  shift 180
	';'  reduce 110
	')'  reduce 110


state 166
	for_statement : KEY_FOR '(' for_paras . ';' expr ';' for_paras ')' '{' program_in_func '}'  (94)
	for_statement : KEY_FOR '(' for_paras . ';' expr ';' for_paras ')' '{' '}'  (95)
	for_statement : KEY_FOR '(' for_paras . ';' ';' for_paras ')' '{' program_in_func '}'  (96)
	for_statement : KEY_FOR '(' for_paras . ';' ';' for_paras ')' '{' '}'  (97)
	for_statement : KEY_FOR '(' for_paras . ';' expr ';' ')' '{' program_in_func '}'  (98)
	for_statement : KEY_FOR '(' for_paras . ';' expr ';' ')' '{' '}'  (99)
	for_statement : KEY_FOR '(' for_paras . ';' ';' ')' '{' program_in_func '}'  (100)
	for_statement : KEY_FOR '(' for_paras . ';' ';' ')' '{' '}'  (101)

	';'  shift 181
	.  error


state 167
	while_statement : KEY_WHILE '(' expr . ')' '{' program_in_func '}'  (90)
	while_statement : KEY_WHILE '(' expr . ')' '{' '}'  (91)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	')'  shift 182
	.  error


state 168
	while_statement : KEY_DO '{' '}' . KEY_WHILE '(' expr ')' ';'  (93)

	KEY_WHILE  shift 183
	.  error


state 169
	while_statement : KEY_DO '{' program_in_func . '}' KEY_WHILE '(' expr ')' ';'  (92)

	'}'  shift 184
	.  error


state 170
	if_else_statement : KEY_IF '(' expr . ')' '{' program_in_func '}' KEY_ELSE '{' program_in_func '}'  (72)
	if_else_statement : KEY_IF '(' expr . ')' '{' '}' KEY_ELSE '{' program_in_func '}'  (73)
	if_else_statement : KEY_IF '(' expr . ')' '{' program_in_func '}' KEY_ELSE '{' '}'  (74)
	if_else_statement : KEY_IF '(' expr . ')' '{' '}' KEY_ELSE '{' '}'  (75)
	if_else_statement : KEY_IF '(' expr . ')' '{' program_in_func '}'  (76)
	if_else_statement : KEY_IF '(' expr . ')' '{' '}'  (77)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	')'  shift 185
	.  error


state 171
	switch_statement : KEY_SWTICH '(' ID . ')' '{' case_statements '}'  (78)
	switch_statement : KEY_SWTICH '(' ID . ')' '{' case_statements default_statement '}'  (79)
	switch_statement : KEY_SWTICH '(' ID . ')' '{' program_in_func case_statements '}'  (80)
	switch_statement : KEY_SWTICH '(' ID . ')' '{' program_in_func case_statements default_statement '}'  (81)

	')'  shift 186
	.  error


state 172
	return_statement : KEY_RETURN expr ';' .  (114)

	.  reduce 114


state 173
	declare_in_func : KEY_CONST type declare_const . ';'  (36)

	';'  shift 187
	.  error


state 174
	compound_statement : '{' program_in_func '}' .  (70)

	.  reduce 70


state 175
	declare_in_func : type declare_ID ';' .  (35)

	.  reduce 35


state 176
	declare_function : ID '(' paras ')' '{' program_in_func '}' .  (48)

	.  reduce 48


state 177
	for_statement : KEY_FOR '(' ';' ';' . for_paras ')' '{' program_in_func '}'  (104)
	for_statement : KEY_FOR '(' ';' ';' . for_paras ')' '{' '}'  (105)
	for_statement : KEY_FOR '(' ';' ';' . ')' '{' program_in_func '}'  (108)
	for_statement : KEY_FOR '(' ';' ';' . ')' '{' '}'  (109)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	')'  shift 188
	.  error

	var  goto 164
	expr  goto 165
	for_paras  goto 189
	val  goto 47


state 178
	for_statement : KEY_FOR '(' ';' expr . ';' for_paras ')' '{' program_in_func '}'  (102)
	for_statement : KEY_FOR '(' ';' expr . ';' for_paras ')' '{' '}'  (103)
	for_statement : KEY_FOR '(' ';' expr . ';' ')' '{' program_in_func '}'  (106)
	for_statement : KEY_FOR '(' ';' expr . ';' ')' '{' '}'  (107)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	';'  shift 190
	.  error


state 179
	for_paras : var '=' . expr  (111)
	for_paras : var '=' . expr ',' for_paras  (113)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 191
	val  goto 47


state 180
	for_paras : expr ',' . for_paras  (112)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 164
	expr  goto 165
	for_paras  goto 192
	val  goto 47


state 181
	for_statement : KEY_FOR '(' for_paras ';' . expr ';' for_paras ')' '{' program_in_func '}'  (94)
	for_statement : KEY_FOR '(' for_paras ';' . expr ';' for_paras ')' '{' '}'  (95)
	for_statement : KEY_FOR '(' for_paras ';' . ';' for_paras ')' '{' program_in_func '}'  (96)
	for_statement : KEY_FOR '(' for_paras ';' . ';' for_paras ')' '{' '}'  (97)
	for_statement : KEY_FOR '(' for_paras ';' . expr ';' ')' '{' program_in_func '}'  (98)
	for_statement : KEY_FOR '(' for_paras ';' . expr ';' ')' '{' '}'  (99)
	for_statement : KEY_FOR '(' for_paras ';' . ';' ')' '{' program_in_func '}'  (100)
	for_statement : KEY_FOR '(' for_paras ';' . ';' ')' '{' '}'  (101)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	';'  shift 193
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 194
	val  goto 47


state 182
	while_statement : KEY_WHILE '(' expr ')' . '{' program_in_func '}'  (90)
	while_statement : KEY_WHILE '(' expr ')' . '{' '}'  (91)

	'{'  shift 195
	.  error


state 183
	while_statement : KEY_DO '{' '}' KEY_WHILE . '(' expr ')' ';'  (93)

	'('  shift 196
	.  error


state 184
	while_statement : KEY_DO '{' program_in_func '}' . KEY_WHILE '(' expr ')' ';'  (92)

	KEY_WHILE  shift 197
	.  error


state 185
	if_else_statement : KEY_IF '(' expr ')' . '{' program_in_func '}' KEY_ELSE '{' program_in_func '}'  (72)
	if_else_statement : KEY_IF '(' expr ')' . '{' '}' KEY_ELSE '{' program_in_func '}'  (73)
	if_else_statement : KEY_IF '(' expr ')' . '{' program_in_func '}' KEY_ELSE '{' '}'  (74)
	if_else_statement : KEY_IF '(' expr ')' . '{' '}' KEY_ELSE '{' '}'  (75)
	if_else_statement : KEY_IF '(' expr ')' . '{' program_in_func '}'  (76)
	if_else_statement : KEY_IF '(' expr ')' . '{' '}'  (77)

	'{'  shift 198
	.  error


state 186
	switch_statement : KEY_SWTICH '(' ID ')' . '{' case_statements '}'  (78)
	switch_statement : KEY_SWTICH '(' ID ')' . '{' case_statements default_statement '}'  (79)
	switch_statement : KEY_SWTICH '(' ID ')' . '{' program_in_func case_statements '}'  (80)
	switch_statement : KEY_SWTICH '(' ID ')' . '{' program_in_func case_statements default_statement '}'  (81)

	'{'  shift 199
	.  error


state 187
	declare_in_func : KEY_CONST type declare_const ';' .  (36)

	.  reduce 36


state 188
	for_statement : KEY_FOR '(' ';' ';' ')' . '{' program_in_func '}'  (108)
	for_statement : KEY_FOR '(' ';' ';' ')' . '{' '}'  (109)

	'{'  shift 200
	.  error


state 189
	for_statement : KEY_FOR '(' ';' ';' for_paras . ')' '{' program_in_func '}'  (104)
	for_statement : KEY_FOR '(' ';' ';' for_paras . ')' '{' '}'  (105)

	')'  shift 201
	.  error


state 190
	for_statement : KEY_FOR '(' ';' expr ';' . for_paras ')' '{' program_in_func '}'  (102)
	for_statement : KEY_FOR '(' ';' expr ';' . for_paras ')' '{' '}'  (103)
	for_statement : KEY_FOR '(' ';' expr ';' . ')' '{' program_in_func '}'  (106)
	for_statement : KEY_FOR '(' ';' expr ';' . ')' '{' '}'  (107)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	')'  shift 202
	.  error

	var  goto 164
	expr  goto 165
	for_paras  goto 203
	val  goto 47


state 191
	for_paras : var '=' expr .  (111)
	for_paras : var '=' expr . ',' for_paras  (113)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	','  shift 204
	';'  reduce 111
	')'  reduce 111


state 192
	for_paras : expr ',' for_paras .  (112)

	.  reduce 112


state 193
	for_statement : KEY_FOR '(' for_paras ';' ';' . for_paras ')' '{' program_in_func '}'  (96)
	for_statement : KEY_FOR '(' for_paras ';' ';' . for_paras ')' '{' '}'  (97)
	for_statement : KEY_FOR '(' for_paras ';' ';' . ')' '{' program_in_func '}'  (100)
	for_statement : KEY_FOR '(' for_paras ';' ';' . ')' '{' '}'  (101)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	')'  shift 205
	.  error

	var  goto 164
	expr  goto 165
	for_paras  goto 206
	val  goto 47


state 194
	for_statement : KEY_FOR '(' for_paras ';' expr . ';' for_paras ')' '{' program_in_func '}'  (94)
	for_statement : KEY_FOR '(' for_paras ';' expr . ';' for_paras ')' '{' '}'  (95)
	for_statement : KEY_FOR '(' for_paras ';' expr . ';' ')' '{' program_in_func '}'  (98)
	for_statement : KEY_FOR '(' for_paras ';' expr . ';' ')' '{' '}'  (99)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	';'  shift 207
	.  error


state 195
	while_statement : KEY_WHILE '(' expr ')' '{' . program_in_func '}'  (90)
	while_statement : KEY_WHILE '(' expr ')' '{' . '}'  (91)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 208
	.  error

	var  goto 124
	program_in_func  goto 209
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 196
	while_statement : KEY_DO '{' '}' KEY_WHILE '(' . expr ')' ';'  (93)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 210
	val  goto 47


state 197
	while_statement : KEY_DO '{' program_in_func '}' KEY_WHILE . '(' expr ')' ';'  (92)

	'('  shift 211
	.  error


state 198
	if_else_statement : KEY_IF '(' expr ')' '{' . program_in_func '}' KEY_ELSE '{' program_in_func '}'  (72)
	if_else_statement : KEY_IF '(' expr ')' '{' . '}' KEY_ELSE '{' program_in_func '}'  (73)
	if_else_statement : KEY_IF '(' expr ')' '{' . program_in_func '}' KEY_ELSE '{' '}'  (74)
	if_else_statement : KEY_IF '(' expr ')' '{' . '}' KEY_ELSE '{' '}'  (75)
	if_else_statement : KEY_IF '(' expr ')' '{' . program_in_func '}'  (76)
	if_else_statement : KEY_IF '(' expr ')' '{' . '}'  (77)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 212
	.  error

	var  goto 124
	program_in_func  goto 213
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 199
	switch_statement : KEY_SWTICH '(' ID ')' '{' . case_statements '}'  (78)
	switch_statement : KEY_SWTICH '(' ID ')' '{' . case_statements default_statement '}'  (79)
	switch_statement : KEY_SWTICH '(' ID ')' '{' . program_in_func case_statements '}'  (80)
	switch_statement : KEY_SWTICH '(' ID ')' '{' . program_in_func case_statements default_statement '}'  (81)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_CASE  shift 214
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	.  error

	var  goto 124
	program_in_func  goto 215
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	case_statements  goto 216
	val  goto 47


state 200
	for_statement : KEY_FOR '(' ';' ';' ')' '{' . program_in_func '}'  (108)
	for_statement : KEY_FOR '(' ';' ';' ')' '{' . '}'  (109)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 217
	.  error

	var  goto 124
	program_in_func  goto 218
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 201
	for_statement : KEY_FOR '(' ';' ';' for_paras ')' . '{' program_in_func '}'  (104)
	for_statement : KEY_FOR '(' ';' ';' for_paras ')' . '{' '}'  (105)

	'{'  shift 219
	.  error


state 202
	for_statement : KEY_FOR '(' ';' expr ';' ')' . '{' program_in_func '}'  (106)
	for_statement : KEY_FOR '(' ';' expr ';' ')' . '{' '}'  (107)

	'{'  shift 220
	.  error


state 203
	for_statement : KEY_FOR '(' ';' expr ';' for_paras . ')' '{' program_in_func '}'  (102)
	for_statement : KEY_FOR '(' ';' expr ';' for_paras . ')' '{' '}'  (103)

	')'  shift 221
	.  error


state 204
	for_paras : var '=' expr ',' . for_paras  (113)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 164
	expr  goto 165
	for_paras  goto 222
	val  goto 47


state 205
	for_statement : KEY_FOR '(' for_paras ';' ';' ')' . '{' program_in_func '}'  (100)
	for_statement : KEY_FOR '(' for_paras ';' ';' ')' . '{' '}'  (101)

	'{'  shift 223
	.  error


state 206
	for_statement : KEY_FOR '(' for_paras ';' ';' for_paras . ')' '{' program_in_func '}'  (96)
	for_statement : KEY_FOR '(' for_paras ';' ';' for_paras . ')' '{' '}'  (97)

	')'  shift 224
	.  error


state 207
	for_statement : KEY_FOR '(' for_paras ';' expr ';' . for_paras ')' '{' program_in_func '}'  (94)
	for_statement : KEY_FOR '(' for_paras ';' expr ';' . for_paras ')' '{' '}'  (95)
	for_statement : KEY_FOR '(' for_paras ';' expr ';' . ')' '{' program_in_func '}'  (98)
	for_statement : KEY_FOR '(' for_paras ';' expr ';' . ')' '{' '}'  (99)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	')'  shift 225
	.  error

	var  goto 164
	expr  goto 165
	for_paras  goto 226
	val  goto 47


state 208
	while_statement : KEY_WHILE '(' expr ')' '{' '}' .  (91)

	.  reduce 91


state 209
	while_statement : KEY_WHILE '(' expr ')' '{' program_in_func . '}'  (90)

	'}'  shift 227
	.  error


state 210
	while_statement : KEY_DO '{' '}' KEY_WHILE '(' expr . ')' ';'  (93)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	')'  shift 228
	.  error


state 211
	while_statement : KEY_DO '{' program_in_func '}' KEY_WHILE '(' . expr ')' ';'  (92)

	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	.  error

	var  goto 45
	expr  goto 229
	val  goto 47


state 212
	if_else_statement : KEY_IF '(' expr ')' '{' '}' . KEY_ELSE '{' program_in_func '}'  (73)
	if_else_statement : KEY_IF '(' expr ')' '{' '}' . KEY_ELSE '{' '}'  (75)
	if_else_statement : KEY_IF '(' expr ')' '{' '}' .  (77)

	KEY_ELSE  shift 230
	KEY_FOR  reduce 77
	KEY_WHILE  reduce 77
	KEY_DO  reduce 77
	KEY_IF  reduce 77
	KEY_SWTICH  reduce 77
	KEY_RETURN  reduce 77
	KEY_BREAK  reduce 77
	KEY_CONTINUE  reduce 77
	KEY_CASE  reduce 77
	KEY_DEFAULT  reduce 77
	KEY_NULL  reduce 77
	KEY_TRUE  reduce 77
	KEY_FALSE  reduce 77
	KEY_CONST  reduce 77
	TYPE_INT  reduce 77
	TYPE_DOUBLE  reduce 77
	TYPE_CHAR  reduce 77
	TYPE_BOOL  reduce 77
	SCI  reduce 77
	DOUBLE  reduce 77
	CHAR  reduce 77
	STR  reduce 77
	INT  reduce 77
	ID  reduce 77
	'!'  reduce 77
	'-'  reduce 77
	'('  reduce 77
	'{'  reduce 77
	'}'  reduce 77


state 213
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func . '}' KEY_ELSE '{' program_in_func '}'  (72)
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func . '}' KEY_ELSE '{' '}'  (74)
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func . '}'  (76)

	'}'  shift 231
	.  error


state 214
	case_statements : KEY_CASE . case_const ':' program_in_case  (84)
	case_statements : KEY_CASE . case_const ':' program_in_case case_statements  (85)
	case_statements : KEY_CASE . case_const ':'  (86)
	case_statements : KEY_CASE . case_const ':' case_statements  (87)

	CHAR  shift 232
	INT  shift 233
	.  error

	case_const  goto 234


state 215
	switch_statement : KEY_SWTICH '(' ID ')' '{' program_in_func . case_statements '}'  (80)
	switch_statement : KEY_SWTICH '(' ID ')' '{' program_in_func . case_statements default_statement '}'  (81)

	KEY_CASE  shift 214
	.  error

	case_statements  goto 235


state 216
	switch_statement : KEY_SWTICH '(' ID ')' '{' case_statements . '}'  (78)
	switch_statement : KEY_SWTICH '(' ID ')' '{' case_statements . default_statement '}'  (79)

	KEY_DEFAULT  shift 236
	'}'  shift 237
	.  error

	default_statement  goto 238


state 217
	for_statement : KEY_FOR '(' ';' ';' ')' '{' '}' .  (109)

	.  reduce 109


state 218
	for_statement : KEY_FOR '(' ';' ';' ')' '{' program_in_func . '}'  (108)

	'}'  shift 239
	.  error


state 219
	for_statement : KEY_FOR '(' ';' ';' for_paras ')' '{' . program_in_func '}'  (104)
	for_statement : KEY_FOR '(' ';' ';' for_paras ')' '{' . '}'  (105)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 240
	.  error

	var  goto 124
	program_in_func  goto 241
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 220
	for_statement : KEY_FOR '(' ';' expr ';' ')' '{' . program_in_func '}'  (106)
	for_statement : KEY_FOR '(' ';' expr ';' ')' '{' . '}'  (107)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 242
	.  error

	var  goto 124
	program_in_func  goto 243
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 221
	for_statement : KEY_FOR '(' ';' expr ';' for_paras ')' . '{' program_in_func '}'  (102)
	for_statement : KEY_FOR '(' ';' expr ';' for_paras ')' . '{' '}'  (103)

	'{'  shift 244
	.  error


state 222
	for_paras : var '=' expr ',' for_paras .  (113)

	.  reduce 113


state 223
	for_statement : KEY_FOR '(' for_paras ';' ';' ')' '{' . program_in_func '}'  (100)
	for_statement : KEY_FOR '(' for_paras ';' ';' ')' '{' . '}'  (101)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 245
	.  error

	var  goto 124
	program_in_func  goto 246
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 224
	for_statement : KEY_FOR '(' for_paras ';' ';' for_paras ')' . '{' program_in_func '}'  (96)
	for_statement : KEY_FOR '(' for_paras ';' ';' for_paras ')' . '{' '}'  (97)

	'{'  shift 247
	.  error


state 225
	for_statement : KEY_FOR '(' for_paras ';' expr ';' ')' . '{' program_in_func '}'  (98)
	for_statement : KEY_FOR '(' for_paras ';' expr ';' ')' . '{' '}'  (99)

	'{'  shift 248
	.  error


state 226
	for_statement : KEY_FOR '(' for_paras ';' expr ';' for_paras . ')' '{' program_in_func '}'  (94)
	for_statement : KEY_FOR '(' for_paras ';' expr ';' for_paras . ')' '{' '}'  (95)

	')'  shift 249
	.  error


state 227
	while_statement : KEY_WHILE '(' expr ')' '{' program_in_func '}' .  (90)

	.  reduce 90


state 228
	while_statement : KEY_DO '{' '}' KEY_WHILE '(' expr ')' . ';'  (93)

	';'  shift 250
	.  error


state 229
	while_statement : KEY_DO '{' program_in_func '}' KEY_WHILE '(' expr . ')' ';'  (92)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	')'  shift 251
	.  error


state 230
	if_else_statement : KEY_IF '(' expr ')' '{' '}' KEY_ELSE . '{' program_in_func '}'  (73)
	if_else_statement : KEY_IF '(' expr ')' '{' '}' KEY_ELSE . '{' '}'  (75)

	'{'  shift 252
	.  error


state 231
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' . KEY_ELSE '{' program_in_func '}'  (72)
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' . KEY_ELSE '{' '}'  (74)
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' .  (76)

	KEY_ELSE  shift 253
	KEY_FOR  reduce 76
	KEY_WHILE  reduce 76
	KEY_DO  reduce 76
	KEY_IF  reduce 76
	KEY_SWTICH  reduce 76
	KEY_RETURN  reduce 76
	KEY_BREAK  reduce 76
	KEY_CONTINUE  reduce 76
	KEY_CASE  reduce 76
	KEY_DEFAULT  reduce 76
	KEY_NULL  reduce 76
	KEY_TRUE  reduce 76
	KEY_FALSE  reduce 76
	KEY_CONST  reduce 76
	TYPE_INT  reduce 76
	TYPE_DOUBLE  reduce 76
	TYPE_CHAR  reduce 76
	TYPE_BOOL  reduce 76
	SCI  reduce 76
	DOUBLE  reduce 76
	CHAR  reduce 76
	STR  reduce 76
	INT  reduce 76
	ID  reduce 76
	'!'  reduce 76
	'-'  reduce 76
	'('  reduce 76
	'{'  reduce 76
	'}'  reduce 76


state 232
	case_const : CHAR .  (83)

	.  reduce 83


state 233
	case_const : INT .  (82)

	.  reduce 82


state 234
	case_statements : KEY_CASE case_const . ':' program_in_case  (84)
	case_statements : KEY_CASE case_const . ':' program_in_case case_statements  (85)
	case_statements : KEY_CASE case_const . ':'  (86)
	case_statements : KEY_CASE case_const . ':' case_statements  (87)

	':'  shift 254
	.  error


state 235
	switch_statement : KEY_SWTICH '(' ID ')' '{' program_in_func case_statements . '}'  (80)
	switch_statement : KEY_SWTICH '(' ID ')' '{' program_in_func case_statements . default_statement '}'  (81)

	KEY_DEFAULT  shift 236
	'}'  shift 255
	.  error

	default_statement  goto 256


state 236
	default_statement : KEY_DEFAULT . ':' program_in_case  (88)
	default_statement : KEY_DEFAULT . ':'  (89)

	':'  shift 257
	.  error


state 237
	switch_statement : KEY_SWTICH '(' ID ')' '{' case_statements '}' .  (78)

	.  reduce 78


state 238
	switch_statement : KEY_SWTICH '(' ID ')' '{' case_statements default_statement . '}'  (79)

	'}'  shift 258
	.  error


state 239
	for_statement : KEY_FOR '(' ';' ';' ')' '{' program_in_func '}' .  (108)

	.  reduce 108


state 240
	for_statement : KEY_FOR '(' ';' ';' for_paras ')' '{' '}' .  (105)

	.  reduce 105


state 241
	for_statement : KEY_FOR '(' ';' ';' for_paras ')' '{' program_in_func . '}'  (104)

	'}'  shift 259
	.  error


state 242
	for_statement : KEY_FOR '(' ';' expr ';' ')' '{' '}' .  (107)

	.  reduce 107


state 243
	for_statement : KEY_FOR '(' ';' expr ';' ')' '{' program_in_func . '}'  (106)

	'}'  shift 260
	.  error


state 244
	for_statement : KEY_FOR '(' ';' expr ';' for_paras ')' '{' . program_in_func '}'  (102)
	for_statement : KEY_FOR '(' ';' expr ';' for_paras ')' '{' . '}'  (103)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 261
	.  error

	var  goto 124
	program_in_func  goto 262
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 245
	for_statement : KEY_FOR '(' for_paras ';' ';' ')' '{' '}' .  (101)

	.  reduce 101


state 246
	for_statement : KEY_FOR '(' for_paras ';' ';' ')' '{' program_in_func . '}'  (100)

	'}'  shift 263
	.  error


state 247
	for_statement : KEY_FOR '(' for_paras ';' ';' for_paras ')' '{' . program_in_func '}'  (96)
	for_statement : KEY_FOR '(' for_paras ';' ';' for_paras ')' '{' . '}'  (97)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 264
	.  error

	var  goto 124
	program_in_func  goto 265
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 248
	for_statement : KEY_FOR '(' for_paras ';' expr ';' ')' '{' . program_in_func '}'  (98)
	for_statement : KEY_FOR '(' for_paras ';' expr ';' ')' '{' . '}'  (99)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 266
	.  error

	var  goto 124
	program_in_func  goto 267
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 249
	for_statement : KEY_FOR '(' for_paras ';' expr ';' for_paras ')' . '{' program_in_func '}'  (94)
	for_statement : KEY_FOR '(' for_paras ';' expr ';' for_paras ')' . '{' '}'  (95)

	'{'  shift 268
	.  error


state 250
	while_statement : KEY_DO '{' '}' KEY_WHILE '(' expr ')' ';' .  (93)

	.  reduce 93


state 251
	while_statement : KEY_DO '{' program_in_func '}' KEY_WHILE '(' expr ')' . ';'  (92)

	';'  shift 269
	.  error


state 252
	if_else_statement : KEY_IF '(' expr ')' '{' '}' KEY_ELSE '{' . program_in_func '}'  (73)
	if_else_statement : KEY_IF '(' expr ')' '{' '}' KEY_ELSE '{' . '}'  (75)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 270
	.  error

	var  goto 124
	program_in_func  goto 271
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 253
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' KEY_ELSE . '{' program_in_func '}'  (72)
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' KEY_ELSE . '{' '}'  (74)

	'{'  shift 272
	.  error


state 254
	case_statements : KEY_CASE case_const ':' . program_in_case  (84)
	case_statements : KEY_CASE case_const ':' . program_in_case case_statements  (85)
	case_statements : KEY_CASE case_const ':' .  (86)
	case_statements : KEY_CASE case_const ':' . case_statements  (87)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 273
	KEY_CONTINUE  shift 274
	KEY_CASE  shift 214
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	KEY_DEFAULT  reduce 86
	'}'  reduce 86

	var  goto 124
	program_in_case  goto 275
	statement_in_case  goto 276
	simple_statement  goto 277
	compound_statement  goto 278
	if_else_statement  goto 279
	switch_statement  goto 280
	while_statement  goto 281
	for_statement  goto 282
	return_statement  goto 283
	expr  goto 284
	case_statements  goto 285
	val  goto 47


state 255
	switch_statement : KEY_SWTICH '(' ID ')' '{' program_in_func case_statements '}' .  (80)

	.  reduce 80


state 256
	switch_statement : KEY_SWTICH '(' ID ')' '{' program_in_func case_statements default_statement . '}'  (81)

	'}'  shift 286
	.  error


state 257
	default_statement : KEY_DEFAULT ':' . program_in_case  (88)
	default_statement : KEY_DEFAULT ':' .  (89)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 273
	KEY_CONTINUE  shift 274
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  reduce 89

	var  goto 124
	program_in_case  goto 287
	statement_in_case  goto 276
	simple_statement  goto 277
	compound_statement  goto 278
	if_else_statement  goto 279
	switch_statement  goto 280
	while_statement  goto 281
	for_statement  goto 282
	return_statement  goto 283
	expr  goto 284
	val  goto 47


state 258
	switch_statement : KEY_SWTICH '(' ID ')' '{' case_statements default_statement '}' .  (79)

	.  reduce 79


state 259
	for_statement : KEY_FOR '(' ';' ';' for_paras ')' '{' program_in_func '}' .  (104)

	.  reduce 104


state 260
	for_statement : KEY_FOR '(' ';' expr ';' ')' '{' program_in_func '}' .  (106)

	.  reduce 106


state 261
	for_statement : KEY_FOR '(' ';' expr ';' for_paras ')' '{' '}' .  (103)

	.  reduce 103


state 262
	for_statement : KEY_FOR '(' ';' expr ';' for_paras ')' '{' program_in_func . '}'  (102)

	'}'  shift 288
	.  error


state 263
	for_statement : KEY_FOR '(' for_paras ';' ';' ')' '{' program_in_func '}' .  (100)

	.  reduce 100


state 264
	for_statement : KEY_FOR '(' for_paras ';' ';' for_paras ')' '{' '}' .  (97)

	.  reduce 97


state 265
	for_statement : KEY_FOR '(' for_paras ';' ';' for_paras ')' '{' program_in_func . '}'  (96)

	'}'  shift 289
	.  error


state 266
	for_statement : KEY_FOR '(' for_paras ';' expr ';' ')' '{' '}' .  (99)

	.  reduce 99


state 267
	for_statement : KEY_FOR '(' for_paras ';' expr ';' ')' '{' program_in_func . '}'  (98)

	'}'  shift 290
	.  error


state 268
	for_statement : KEY_FOR '(' for_paras ';' expr ';' for_paras ')' '{' . program_in_func '}'  (94)
	for_statement : KEY_FOR '(' for_paras ';' expr ';' for_paras ')' '{' . '}'  (95)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 291
	.  error

	var  goto 124
	program_in_func  goto 292
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 269
	while_statement : KEY_DO '{' program_in_func '}' KEY_WHILE '(' expr ')' ';' .  (92)

	.  reduce 92


state 270
	if_else_statement : KEY_IF '(' expr ')' '{' '}' KEY_ELSE '{' '}' .  (75)

	.  reduce 75


state 271
	if_else_statement : KEY_IF '(' expr ')' '{' '}' KEY_ELSE '{' program_in_func . '}'  (73)

	'}'  shift 293
	.  error


state 272
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' KEY_ELSE '{' . program_in_func '}'  (72)
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' KEY_ELSE '{' . '}'  (74)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 119
	KEY_CONTINUE  shift 120
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	KEY_CONST  shift 121
	TYPE_INT  shift 2
	TYPE_DOUBLE  shift 3
	TYPE_CHAR  shift 4
	TYPE_BOOL  shift 5
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	'}'  shift 294
	.  error

	var  goto 124
	program_in_func  goto 295
	statement_in_func  goto 126
	simple_statement  goto 127
	declare_in_func  goto 128
	compound_statement  goto 129
	if_else_statement  goto 130
	switch_statement  goto 131
	while_statement  goto 132
	for_statement  goto 133
	return_statement  goto 134
	expr  goto 135
	type  goto 136
	val  goto 47


state 273
	statement_in_case : KEY_BREAK . ';'  (27)

	';'  shift 296
	.  error


state 274
	statement_in_case : KEY_CONTINUE . ';'  (28)

	';'  shift 297
	.  error


state 275
	case_statements : KEY_CASE case_const ':' program_in_case .  (84)
	case_statements : KEY_CASE case_const ':' program_in_case . case_statements  (85)

	KEY_CASE  shift 214
	KEY_DEFAULT  reduce 84
	'}'  reduce 84

	case_statements  goto 298


state 276
	program_in_case : statement_in_case .  (5)
	program_in_case : statement_in_case . program_in_case  (6)

	KEY_FOR  shift 113
	KEY_WHILE  shift 114
	KEY_DO  shift 115
	KEY_IF  shift 116
	KEY_SWTICH  shift 117
	KEY_RETURN  shift 118
	KEY_BREAK  shift 273
	KEY_CONTINUE  shift 274
	KEY_NULL  shift 33
	KEY_TRUE  shift 34
	KEY_FALSE  shift 35
	SCI  shift 36
	DOUBLE  shift 37
	CHAR  shift 38
	STR  shift 39
	INT  shift 40
	ID  shift 41
	'!'  shift 42
	'-'  shift 43
	'('  shift 44
	'{'  shift 122
	KEY_CASE  reduce 5
	KEY_DEFAULT  reduce 5
	'}'  reduce 5

	var  goto 124
	program_in_case  goto 299
	statement_in_case  goto 276
	simple_statement  goto 277
	compound_statement  goto 278
	if_else_statement  goto 279
	switch_statement  goto 280
	while_statement  goto 281
	for_statement  goto 282
	return_statement  goto 283
	expr  goto 284
	val  goto 47


state 277
	statement_in_case : simple_statement .  (21)

	.  reduce 21


state 278
	statement_in_case : compound_statement .  (22)

	.  reduce 22


state 279
	statement_in_case : if_else_statement .  (23)

	.  reduce 23


state 280
	statement_in_case : switch_statement .  (24)

	.  reduce 24


state 281
	statement_in_case : while_statement .  (25)

	.  reduce 25


state 282
	statement_in_case : for_statement .  (26)

	.  reduce 26


state 283
	statement_in_case : return_statement .  (29)

	.  reduce 29


state 284
	statement_in_case : expr . ';'  (30)
	expr : expr . '*' expr  (121)
	expr : expr . '/' expr  (122)
	expr : expr . '%' expr  (123)
	expr : expr . '+' expr  (124)
	expr : expr . '-' expr  (125)
	expr : expr . OPER_CMP expr  (126)
	expr : expr . OPER_AA expr  (128)
	expr : expr . OPER_OO expr  (129)

	OPER_AA  shift 67
	OPER_OO  shift 68
	OPER_CMP  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	';'  shift 300
	.  error


state 285
	case_statements : KEY_CASE case_const ':' case_statements .  (87)

	.  reduce 87


state 286
	switch_statement : KEY_SWTICH '(' ID ')' '{' program_in_func case_statements default_statement '}' .  (81)

	.  reduce 81


state 287
	default_statement : KEY_DEFAULT ':' program_in_case .  (88)

	.  reduce 88


state 288
	for_statement : KEY_FOR '(' ';' expr ';' for_paras ')' '{' program_in_func '}' .  (102)

	.  reduce 102


state 289
	for_statement : KEY_FOR '(' for_paras ';' ';' for_paras ')' '{' program_in_func '}' .  (96)

	.  reduce 96


state 290
	for_statement : KEY_FOR '(' for_paras ';' expr ';' ')' '{' program_in_func '}' .  (98)

	.  reduce 98


state 291
	for_statement : KEY_FOR '(' for_paras ';' expr ';' for_paras ')' '{' '}' .  (95)

	.  reduce 95


state 292
	for_statement : KEY_FOR '(' for_paras ';' expr ';' for_paras ')' '{' program_in_func . '}'  (94)

	'}'  shift 301
	.  error


state 293
	if_else_statement : KEY_IF '(' expr ')' '{' '}' KEY_ELSE '{' program_in_func '}' .  (73)

	.  reduce 73


state 294
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' KEY_ELSE '{' '}' .  (74)

	.  reduce 74


state 295
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' KEY_ELSE '{' program_in_func . '}'  (72)

	'}'  shift 302
	.  error


state 296
	statement_in_case : KEY_BREAK ';' .  (27)

	.  reduce 27


state 297
	statement_in_case : KEY_CONTINUE ';' .  (28)

	.  reduce 28


state 298
	case_statements : KEY_CASE case_const ':' program_in_case case_statements .  (85)

	.  reduce 85


state 299
	program_in_case : statement_in_case program_in_case .  (6)

	.  reduce 6


state 300
	statement_in_case : expr ';' .  (30)

	.  reduce 30


state 301
	for_statement : KEY_FOR '(' for_paras ';' expr ';' for_paras ')' '{' program_in_func '}' .  (94)

	.  reduce 94


state 302
	if_else_statement : KEY_IF '(' expr ')' '{' program_in_func '}' KEY_ELSE '{' program_in_func '}' .  (72)

	.  reduce 72


51 terminals, 38 nonterminals
146 grammar rules, 303 states
